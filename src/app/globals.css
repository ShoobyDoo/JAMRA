@config "../../tailwind.config.ts";
@import "tailwindcss";

/* Override Tailwind v4's hover variant to remove @media (hover: hover) wrapper
 * This fixes Linux Chromium/Electron incorrectly reporting hover: none
 * Reference: https://bordermedia.org/blog/tailwind-css-4-hover-on-touch-device
 */
@custom-variant hover (&:hover);

/* Override Mantine's @media (hover: hover) queries for Linux Chromium compatibility
 * Linux Chromium/Electron incorrectly reports hover: none even with a mouse.
 * Mantine's styles are in @media (hover: hover) which don't apply on Linux.
 * We duplicate hover styles in @media (hover: none) to fix this.
 */
@media (hover: none) {
  /* Mantine Button/ActionIcon hover - use both variable chains with fallback */
  button[data-variant]:hover:where(:not([data-loading], :disabled, [data-disabled])),
  a[data-variant]:hover:where(:not([data-loading], :disabled, [data-disabled])) {
    background-color: var(--button-hover, var(--ai-hover, var(--mantine-primary-color-filled-hover)));
    color: var(--button-hover-color, var(--ai-hover-color, var(--button-color, var(--ai-color))));
  }

  /* Mantine NavLink hover - match Mantine's exact colors (NavLinks render as <a> tags) */
  :where([data-mantine-color-scheme='light']) a:where(:not([data-variant])):hover:where(:not([data-disabled])) {
    background-color: var(--mantine-color-gray-0);
  }

  :where([data-mantine-color-scheme='dark']) a:where(:not([data-variant])):hover:where(:not([data-disabled])) {
    background-color: var(--mantine-color-dark-6);
  }

  /* Mantine NavLink active hover - use component's variable */
  a:where([data-active]):hover:where(:not([data-variant], [data-disabled])) {
    background-color: var(--nl-hover);
  }

  /* Mantine UnstyledButton hover (sidebar buttons, etc. - render as button elements) */
  :where([data-mantine-color-scheme='light']) button:where(:not([data-variant])):hover:where(:not([role="menuitem"], [data-combobox-option], [data-disabled])) {
    background-color: var(--mantine-color-gray-0);
  }

  :where([data-mantine-color-scheme='dark']) button:where(:not([data-variant])):hover:where(:not([role="menuitem"], [data-combobox-option], [data-disabled])) {
    background-color: var(--mantine-color-dark-6);
  }

  /* Mantine Combobox/Select option hover */
  :where([data-mantine-color-scheme='light']) [data-combobox-option]:hover:where(:not([data-combobox-selected], [data-combobox-disabled])) {
    background-color: var(--mantine-color-gray-0);
  }

  :where([data-mantine-color-scheme='dark']) [data-combobox-option]:hover:where(:not([data-combobox-selected], [data-combobox-disabled])) {
    background-color: var(--mantine-color-dark-7);
  }

  /* Mantine Menu Item hover - use component's own variable with fallback */
  :where([data-mantine-color-scheme='light']) [role="menuitem"]:hover:where(:not([data-disabled])) {
    background-color: var(--menu-item-hover, var(--mantine-color-gray-0));
  }

  :where([data-mantine-color-scheme='dark']) [role="menuitem"]:hover:where(:not([data-disabled])) {
    background-color: var(--menu-item-hover, var(--mantine-color-dark-4));
  }

  /* Mantine Anchor (link) hover */
  a[data-mantine-component="Anchor"]:hover {
    text-decoration: underline;
  }

  .reader-control-button[data-reader-control] {
    background-color: transparent;
  }

  .reader-control-button[data-reader-control]:hover,
  .reader-control-button[data-reader-control]:focus-visible {
    background-color: rgba(148, 163, 184, 0.25);
  }
}

@layer base {
  :root {
    --background: #ffffff;
    --foreground: #1f2937;

    --card: #ffffff;
    --card-foreground: #1f2937;

    --popover: #ffffff;
    --popover-foreground: #1f2937;

    --primary: #1d4ed8;
    --primary-foreground: #f8fafc;

    --secondary: #f3f4f6;
    --secondary-foreground: #1f2937;

    --muted: #e5e7eb;
    --muted-foreground: #4b5563;

    --accent: #e5e7eb;
    --accent-foreground: #1f2937;

    --destructive: #ef4444;
    --destructive-foreground: #f8fafc;

    --border: #e5e7eb;
    --input: #d1d5db;
    --ring: #2563eb;

    --radius: 0.5rem;
  }
}

@layer base {
  * {
    border-color: var(--border);
  }

  html,
  body {
    overflow: hidden;
    height: 100%;
    width: 100%;
  }

  body {
    @apply bg-background text-foreground font-sans antialiased;
  }

  /* Don't set --button-hover or --ai-hover globally
   * Let Mantine's variant-specific colors work naturally
   */

  [data-combobox-option] {
    --combobox-hover: var(--accent);
  }

  /* Modern thin scrollbar styling */
  * {
    scrollbar-width: thin;
    scrollbar-color: rgba(0, 0, 0, 0.2) transparent;
  }

  /* Webkit browsers (Chrome, Safari, Edge) */
  *::-webkit-scrollbar {
    width: 8px;
    height: 8px;
  }

  *::-webkit-scrollbar-track {
    background: transparent;
  }

  *::-webkit-scrollbar-thumb {
    background-color: rgba(0, 0, 0, 0.2);
    border-radius: 4px;
  }

  *::-webkit-scrollbar-thumb:hover {
    background-color: rgba(0, 0, 0, 0.3);
  }

  *::-webkit-scrollbar-corner {
    background: transparent;
  }
}

@layer utilities {
  .border-border {
    border-color: var(--border);
  }

  .reader-viewport {
    scrollbar-width: none;
  }

  .reader-viewport::-webkit-scrollbar {
    display: none;
  }

  .reader-control-button {
    background-color: transparent;
    transition: background-color 150ms ease, color 150ms ease;
  }

  .reader-control-button[data-reader-control]:hover,
  .reader-control-button[data-reader-control]:focus-visible {
    background-color: rgba(148, 163, 184, 0.25);
  }

  .reader-control-slider:focus-visible {
    outline: 2px solid var(--primary);
    outline-offset: 2px;
  }

  .border-input {
    border-color: var(--input);
  }

  .bg-background {
    background-color: var(--background);
  }

  .bg-foreground {
    background-color: var(--foreground);
  }

  .bg-card {
    background-color: var(--card);
  }

  .bg-popover {
    background-color: var(--popover);
  }

  .bg-primary {
    background-color: var(--primary);
  }

  .bg-secondary {
    background-color: var(--secondary);
  }

  .bg-destructive {
    background-color: var(--destructive);
  }

  .bg-muted {
    background-color: var(--muted);
  }

  .bg-accent {
    background-color: var(--accent);
  }

  .text-foreground {
    color: var(--foreground);
  }

  .text-card-foreground {
    color: var(--card-foreground);
  }

  .text-popover-foreground {
    color: var(--popover-foreground);
  }

  .text-primary-foreground {
    color: var(--primary-foreground);
  }

  .text-secondary-foreground {
    color: var(--secondary-foreground);
  }

  .text-destructive-foreground {
    color: var(--destructive-foreground);
  }

  .text-muted-foreground {
    color: var(--muted-foreground);
  }

  .text-accent-foreground {
    color: var(--accent-foreground);
  }

  .ring-ring {
    --tw-ring-color: var(--ring);
  }

  .extension-card-expandable {
    transition: all 0.2s ease-in-out;
  }

  .extension-card-expandable:hover {
    transform: translateY(-1px);
    box-shadow:
      0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }
}
